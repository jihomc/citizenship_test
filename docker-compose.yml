version: "3.5"

services:

  db:
    image: mysql:latest 
    container_name: db
    command: ["--sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION", "--default-authentication-plugin=mysql_native_password"]
    restart: always
    env_file: .env
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 1 
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "3306:3306"
    volumes:
      - dbdata:/var/lib/mysql
      - ./:/docker-entrypoint-initdb.d
    networks:
      - app-network

  nodedb:
    build:
      context: ./database
      dockerfile: Dockerfile
    image: nodedb
    container_name: nodedb
    restart: on-failure
    env_file: .env
    environment:
      WAIT_HOSTS: db:3306
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOSTNAME: db
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    networks:
      - app-network

  nodeapp:
    build:
      context: .
      dockerfile: Dockerfile
    image: nodeapp
    container_name: nodeapp
    restart: unless-stopped
    env_file: .env
    environment:
      NODE_ENV: ${NODE_ENV}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOSTNAME: db
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "8080:8080"
    volumes:
      - ./src/:/home/node/app/src
      - node_modules:/home/node/app/node_modules
    networks:
     - app-network
    command: npm run build start

networks:
  app-network:
    driver: bridge

volumes:
  src:
  dbdata:
  node_modules:
